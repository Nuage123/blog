export const redirects = JSON.parse("{}")

export const routes = Object.fromEntries([
  ["/AboutPage.html", { loader: () => import(/* webpackChunkName: "AboutPage.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/AboutPage.html.js"), meta: {"title":""} }],
  ["/ContactMe.html", { loader: () => import(/* webpackChunkName: "ContactMe.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/ContactMe.html.js"), meta: {"title":""} }],
  ["/get-started.html", { loader: () => import(/* webpackChunkName: "get-started.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/get-started.html.js"), meta: {"title":"Get Started"} }],
  ["/Projects.html", { loader: () => import(/* webpackChunkName: "Projects.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/Projects.html.js"), meta: {"title":""} }],
  ["/", { loader: () => import(/* webpackChunkName: "index.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/index.html.js"), meta: {"title":""} }],
  ["/posts/article1.html", { loader: () => import(/* webpackChunkName: "posts_article1.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/posts/article1.html.js"), meta: {"_blog":{"title":"我开博客啦","author":"","date":"2024-06-29T00:00:00.000Z","category":["日记"],"tag":[],"excerpt":"\n<p>框架是使用Vuepress搭建的，然后首页是用自定义的\n本来打包之后路径出现了问题，现在终于成功啦\n注意要把base\nbase:\"/blog/\",\n然后部署了两天，终于部署成功啦！</p>\n<h4>可喜可贺，可喜可贺</h4>\n"},"title":"我开博客啦"} }],
  ["/posts/article2.html", { loader: () => import(/* webpackChunkName: "posts_article2.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/posts/article2.html.js"), meta: {"_blog":{"title":"使用VuePress搭建BLOG","author":"","date":"2024-07-09T00:00:00.000Z","category":["项目"],"tag":[],"excerpt":"\n<p>搭建个人站的想法其实已经有了很久，第一次买<strong>Angela Yu</strong>的<strong color=\"blue\">Web开发</strong>的时候已经有这个想法，当时有用html搭建本人的第一个非常简洁的个人站。因为之前学习了Vue框架，所以这次选择的是<strong>Vuepress</strong>搭建。</p>\n<h2>📓Vuepress介绍</h2>\n<p>VuePress 是一个以 Markdown 为中心的静态网站生成器。你可以使用 Markdown 来书写内容（如文档、博客等），然后 VuePress 会帮助你生成一个静态网站来展示它们。</p>"},"title":"使用VuePress搭建BLOG"} }],
  ["/posts/article3.html", { loader: () => import(/* webpackChunkName: "posts_article3.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/posts/article3.html.js"), meta: {"_blog":{"title":"AI智能pdf阅读器","author":"","date":"2024-07-09T00:00:00.000Z","category":["项目"],"tag":[],"excerpt":"\n<p>展示链接：<a href=\"https://aipdfreader-uf9wmdxwd7uqej45j3ip3w.streamlit.app/\">AI智能pdf阅读器</a>\n仓库地址：https://github.com/Nuage123/ai_pdf_reader</p>\n<h2>技术栈：</h2>\n<p>开发：Python+Langchain+Streamlit\n部署：Github+Streamlit cloud</p>\n<h2>展示：</h2>\n<p></p>\n<h2>utils 部分代码：</h2>\n<div class=\"language-text\" data-highlighter=\"prismjs\" data-ext=\"text\" data-title=\"text\"><pre class=\"language-text\"><code><span class=\"line\"></span>\n<span class=\"line\">def qa_agent(openai_api_key, memory, uploaded_file, question):</span>\n<span class=\"line\">&lt;!-- 因为无法充值openai官网的token我使用了一下代理，只要在相关网站获取token,然后修改一下base_url即可 --&gt;</span>\n<span class=\"line\">&lt;!-- 创建ChatOpenAI模型 --&gt;</span>\n<span class=\"line\">    model = ChatOpenAI(model=\"gpt-3.5-turbo\",</span>\n<span class=\"line\">                       openai_api_key=openai_api_key,</span>\n<span class=\"line\">                       base_url=\"https://api.openai-hub.com/v1\"</span>\n<span class=\"line\">                       )</span>\n<span class=\"line\">     &lt;!-- 上传文件 --&gt;</span>\n<span class=\"line\">    file_content = uploaded_file.read()</span>\n<span class=\"line\">    temp_file_path = \"temp.pdf\"</span>\n<span class=\"line\">    with open(temp_file_path, \"wb\") as temp_file:</span>\n<span class=\"line\">        temp_file.write(file_content)</span>\n<span class=\"line\">    &lt;!-- 加载器 --&gt;</span>\n<span class=\"line\">    loader = PyPDFLoader(temp_file_path)</span>\n<span class=\"line\">    docs = loader.load()</span>\n<span class=\"line\">    &lt;!-- 分片 --&gt;</span>\n<span class=\"line\">    text_splitter = RecursiveCharacterTextSplitter(</span>\n<span class=\"line\">        chunk_size=1000,</span>\n<span class=\"line\">        chunk_overlap=50,</span>\n<span class=\"line\">        &lt;!-- 适合中文的分隔符 --&gt;</span>\n<span class=\"line\">        separators=[\"\\n\", \"。\", \"！\", \"？\", \"，\", \"、\", \"\"]</span>\n<span class=\"line\">    )</span>\n<span class=\"line\">    texts = text_splitter.split_documents(docs)</span>\n<span class=\"line\">    &lt;!-- 如果没有设置虚拟环境，嵌入模型需要输入参数openai_api_key，base_url解释同上 --&gt;</span>\n<span class=\"line\">    embeddings_model = OpenAIEmbeddings(</span>\n<span class=\"line\">        openai_api_key=openai_api_key,</span>\n<span class=\"line\">        base_url=\"https://api.openai-hub.com/v1\"</span>\n<span class=\"line\">    )</span>\n<span class=\"line\">    &lt;!-- 数据库 --&gt;</span>\n<span class=\"line\">    db = FAISS.from_documents(texts, embeddings_model)</span>\n<span class=\"line\">    &lt;!-- 检索器 --&gt;</span>\n<span class=\"line\">    retriever = db.as_retriever()</span>\n<span class=\"line\">    &lt;!-- 链 --&gt;</span>\n<span class=\"line\">    qa = ConversationalRetrievalChain.from_llm(</span>\n<span class=\"line\">        llm=model,</span>\n<span class=\"line\">        retriever=retriever,</span>\n<span class=\"line\">        memory=memory</span>\n<span class=\"line\">    )</span>\n<span class=\"line\">    &lt;!-- 调用链 --&gt;</span>\n<span class=\"line\">    response = qa.invoke({\"chat_history\": memory, \"question\": question})</span>\n<span class=\"line\">    return response</span>\n<span class=\"line\"></span></code></pre></div>"},"title":"AI智能pdf阅读器"} }],
  ["/posts/article4.html", { loader: () => import(/* webpackChunkName: "posts_article4.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/posts/article4.html.js"), meta: {"_blog":{"title":"自动化办公工具1-Python-docx的使用（含Tkinter)","author":"","date":"2024-08-18T00:00:00.000Z","category":["项目"],"tag":[],"excerpt":"\n<p>在两份offer的犹疑中，没想到自己最终选了体制内的工作，内心其实有迷惑惘然的地方，但是依然需要保持精神的尊严。\n第一个月工作和想象中一样，简单但是琐碎。譬如将多份报告转换为ld期望的格式，又或者将报告第一页的留言进行修改，传统方式下会采取复制粘贴的方式。但是使用<strong>Python-Docx</strong>库可以<s>轻松（因为还在学习这个库的原因，所以写脚本其实花了一点时间）</s>，对word进行批量编辑，替代。效果请看最后。</p>\n<h2>Python-docx库</h2>\n<h3>介绍</h3>\n<p>python-docx库 是一个用于创建和更新 Microsoft Word（.docx）文件的Python库\n👉<a href=\"https://python-docx.readthedocs.io/en/latest/index.html\">Python-docx官网</a></p>"},"title":"自动化办公工具1-Python-docx的使用（含Tkinter)"} }],
  ["/404.html", { loader: () => import(/* webpackChunkName: "404.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/404.html.js"), meta: {"title":""} }],
  ["/category/", { loader: () => import(/* webpackChunkName: "category_index.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/category/index.html.js"), meta: {"title":"Categories"} }],
  ["/category/%E6%97%A5%E8%AE%B0/", { loader: () => import(/* webpackChunkName: "category_日记_index.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/category/日记/index.html.js"), meta: {"title":"Category 日记"} }],
  ["/category/%E9%A1%B9%E7%9B%AE/", { loader: () => import(/* webpackChunkName: "category_项目_index.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/category/项目/index.html.js"), meta: {"title":"Category 项目"} }],
  ["/article/", { loader: () => import(/* webpackChunkName: "article_index.html" */"D:/Develop/blog/vuepress-starter/docs/.vuepress/.temp/pages/article/index.html.js"), meta: {"title":"Articles"} }],
]);
